package com.esolution.reactive.service;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.esolution.reactive.model.User;
import com.esolution.reactive.repository.LocationRepository;
import com.esolution.reactive.repository.UserRepository;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@Service
public class UserService {
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
    private LocationRepository locationRepository;
	
	public Flux<User> getAllUsers() {
        return userRepository.findAll();
    }
	
	public Mono<User> getUserById(UUID id) {
        return userRepository.findById(id);
    }
	
	public Mono<User> saveUser(User user) {
        return locationRepository.findById(user.getLocation().getId())
                .flatMap(location -> {
                    user.setLocation(location);
                    return userRepository.save(user);
                });
    }
	
	public Mono<Void> deleteUser(UUID id) {
        return userRepository.deleteById(id);
    }
}
